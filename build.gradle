group 'com.aws'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'scala'

sourceCompatibility = 1.8

def junitVersion = '4.12'
def logbackVersion = '1.2.3'

def awsSDKVersion = '1.11.354'
def awsKCLVersion = '1.9.1'
def awsKPLVersion = '0.12.9'

def scalaVersion = '2.12.6'
def scalaLogging = '3.9.0'
def typeSafeConfig = '1.3.3'

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.scala-lang', name: 'scala-library', version: scalaVersion
    compile group: 'com.amazonaws', name: 'aws-java-sdk-kinesis', version: awsSDKVersion
    compile group: 'com.amazonaws', name: 'amazon-kinesis-client', version: awsKCLVersion
    compile group: 'com.amazonaws', name: 'amazon-kinesis-producer', version: awsKPLVersion
    compile group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
    compile group: 'com.typesafe.scala-logging', name: 'scala-logging_2.12', version: scalaLogging
    compile group: 'com.typesafe', name: 'config', version: typeSafeConfig
    testCompile group: 'junit', name: 'junit', version: junitVersion
}

jar {
    manifest {
        attributes "Main-Class": "com.apps.AppMain"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task(api, dependsOn: 'classes', type: JavaExec) {
    main = 'com.apps.ExampleSdkApiAppMain'
    classpath = sourceSets.main.runtimeClasspath
    args '', ''
    systemProperty '', ''
}

task(library, dependsOn: 'classes', type: JavaExec) {
    main = 'com.apps.ExampleLibraryAppMain'
    classpath = sourceSets.main.runtimeClasspath
    args '', ''
    systemProperty '', ''
}